/*
 * PALScan API
 * PALScan API reference for developers
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ScannnedImage
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-12-14T21:37:17.228Z")
public class ScannnedImage {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("place")
  private String place = null;

  @SerializedName("googQuality")
  private Boolean googQuality = null;

  @SerializedName("image")
  private String image = null;

  public ScannnedImage id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public ScannnedImage url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public ScannnedImage place(String place) {
    this.place = place;
    return this;
  }

   /**
   * Get place
   * @return place
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPlace() {
    return place;
  }

  public void setPlace(String place) {
    this.place = place;
  }

  public ScannnedImage googQuality(Boolean googQuality) {
    this.googQuality = googQuality;
    return this;
  }

   /**
   * Get googQuality
   * @return googQuality
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isGoogQuality() {
    return googQuality;
  }

  public void setGoogQuality(Boolean googQuality) {
    this.googQuality = googQuality;
  }

  public ScannnedImage image(String image) {
    this.image = image;
    return this;
  }

   /**
   * Get image
   * @return image
  **/
  @ApiModelProperty(required = true, value = "")
  public String getImage() {
    return image;
  }

  public void setImage(String image) {
    this.image = image;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScannnedImage scannnedImage = (ScannnedImage) o;
    return Objects.equals(this.id, scannnedImage.id) &&
        Objects.equals(this.url, scannnedImage.url) &&
        Objects.equals(this.place, scannnedImage.place) &&
        Objects.equals(this.googQuality, scannnedImage.googQuality) &&
        Objects.equals(this.image, scannnedImage.image);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, place, googQuality, image);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScannnedImage {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    place: ").append(toIndentedString(place)).append("\n");
    sb.append("    googQuality: ").append(toIndentedString(googQuality)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

